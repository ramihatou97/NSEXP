name: ci

on:
  push:
    branches:
      - "main"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: cloud
          endpoint: "ramihatoum/nsexm"

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          tags: "${{ vars.DOCKER_USER }}/nsexp-backend:latest,${{ vars.DOCKER_USER }}/nsexp-backend:${{ github.sha }}"
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=registry,ref=${{ vars.DOCKER_USER }}/nsexp-backend:buildcache
          cache-to: type=registry,ref=${{ vars.DOCKER_USER }}/nsexp-backend:buildcache,mode=max

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          tags: "${{ vars.DOCKER_USER }}/nsexp-frontend:latest,${{ vars.DOCKER_USER }}/nsexp-frontend:${{ github.sha }}"
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=registry,ref=${{ vars.DOCKER_USER }}/nsexp-frontend:buildcache
          cache-to: type=registry,ref=${{ vars.DOCKER_USER }}/nsexp-frontend:buildcache,mode=max
          build-args: |
            NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }}
            NEXT_PUBLIC_WS_URL=${{ vars.NEXT_PUBLIC_WS_URL }}
